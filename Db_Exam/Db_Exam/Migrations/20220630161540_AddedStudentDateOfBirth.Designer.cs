// <auto-generated />
using System;
using Db_Exam;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Db_Exam.Migrations
{
    [DbContext(typeof(ExamDbContext))]
    [Migration("20220630161540_AddedStudentDateOfBirth")]
    partial class AddedStudentDateOfBirth
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Db_Exam.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Db_Exam.Entities.Lecture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("Db_Exam.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentDepartmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentDepartmentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DepartmentLecture", b =>
                {
                    b.Property<int>("DepartmentLecturesId")
                        .HasColumnType("int");

                    b.Property<int>("LectureDepartmentsId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentLecturesId", "LectureDepartmentsId");

                    b.HasIndex("LectureDepartmentsId");

                    b.ToTable("DepartmentLecture");
                });

            modelBuilder.Entity("Db_Exam.Entities.Lecture", b =>
                {
                    b.HasOne("Db_Exam.Entities.Student", null)
                        .WithMany("StudentLectures")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("Db_Exam.Entities.Student", b =>
                {
                    b.HasOne("Db_Exam.Entities.Department", "StudentDepartment")
                        .WithMany("DepartmentStudents")
                        .HasForeignKey("StudentDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentDepartment");
                });

            modelBuilder.Entity("DepartmentLecture", b =>
                {
                    b.HasOne("Db_Exam.Entities.Lecture", null)
                        .WithMany()
                        .HasForeignKey("DepartmentLecturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Db_Exam.Entities.Department", null)
                        .WithMany()
                        .HasForeignKey("LectureDepartmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Db_Exam.Entities.Department", b =>
                {
                    b.Navigation("DepartmentStudents");
                });

            modelBuilder.Entity("Db_Exam.Entities.Student", b =>
                {
                    b.Navigation("StudentLectures");
                });
#pragma warning restore 612, 618
        }
    }
}
